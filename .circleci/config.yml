# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#

version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: mdanialqureshi/TalkBox/gradle_and_node:2.0


      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo/TalkBox/TalkBox

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout:
            path: ~/repo/TalkBox

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # Run gradle tests
      - run:
          name: Run gradle tests
          command: xvfb-run --server-args="-screen 0 1024x768x24" gradle test


      # Upload test results
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

      # Generate jar files
      - run:
          name: Generate jar files
          command: gradle allJars


      # Upload jar files
      - run:
          name: Upload jar files
          command: |
            mkdir -p ~/jars/
            find . -type f -regex ".*/build/libs/.*jar" -exec cp {} ~/jars/ \;
          when: always
      - store_artifacts:
          path: ~/jars

    # Create Release on GitHub
      - run:
          name: "Build and Publish Release on GitHub"
          command: |
            NOW="$(date)"
            ZIP_FILE_NAME=TalkBox
            TAG=Release-$(date '+%Y-%m-%d-%H-%M-%S')

            gradle jar

            cd ./build/libs/
            zip ${ZIP_FILE_NAME}.zip TalkBoxConfig-1.2.1.jar TalkBoxSim-1.2.1.jar

            github-release upload --token ${GITHUB_TOKEN} --owner ${PROJECT_USERNAME} --repo ${PROJECT_REPONAME} --tag ${TAG} --name "circleci Test Release" --body "Release date: ${NOW}" ${ZIP_FILE_NAME}.zip
